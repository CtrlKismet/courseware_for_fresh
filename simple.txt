大家好，我是软件部的部长胡亦洲，今天的“科协九点半”就由我来向大家讲一些程序设计相关的东西。
今天的课程呢主要涉及到的是一些非常简单的东西，所以不用担心C语言基础不够的问题。
在上课之前呢向大家介绍一下我们部门的一个学习方向就是web设计和制作，大家看我现在用的这个ppt，它其实是一个网页哦（展示一下）。（不过因为是只作为ppt使用所以说可能大家访问的时候有一些bug而且最好不要使用手机访问，请大家谅解，稍后我也会向大家提供我的ppt初稿以及网页版的网址）(指CtrlKismet）这个就是我的ID，这里稍微说句题外话，大家之后的大学生涯很有可能会需要在一些英文网站上注册，这个时候取一个永远不会被重名的英文ID就是非常重要的事了。（当然我这个ID就不要用了（笑））
那我们现在进入正题。（点击下一页）
这里我例举了几个大家可能对程序设计的一些问题，用这些问题来介绍一下程序设计竞赛。
首先第一个，什么是程序设计竞赛？（点击）程序设计呢顾名思义就是设计程序啦对吧，而比赛显然是需要有参与者以及比赛持续时间的咯，所以说（念答案）
那么，程序设计具体是要解决什么问题，或者说是需要设计一些什么程序呢？（点击）（念答案）
(点击)以上面那个题目为例，你需要在1s内算出1到n的和。
（点击）那我们能参加一些什么比赛呢？（念答案）
（点击）参加比赛有些啥好处了？（念答案）
（点击）那么参加比赛需要你们做些什么？（念答案）
（点击下一页）
这里例举了几个C语言比较好用的编译器（vscode是编辑器）。建议大家在使用的时候不要汉化，因为编程需要接触到很多的英文资料。
codeblocks(打开展示)这里我展开解释一下一个C程序的运行，你得先点这个小齿轮（放大镜）进行编译（编译就是将你的程序转换成机器能看懂的语言（0和1））之后点击这个绿色三角形就可以运行了，或者你可以点这个齿轮箭头在一起的键，功能显然就是编译并运行了。这个时候如果我们修改程序（保存）之后（把helloworld后面加个23333）直接点击运行而不编译（运行），诶，我们发现我们所做的改动并没有生效，此时运行的是我们之前编译过的那个helloworld的程序。所以大家在写完程序之后一定要先编译。
dev C++基本功能和codeblocks差不多，但是我个人认为没有codeblocks好看，而且它的debug功能比较难用。
vscode呢其实是一个编辑器（记事本也是编辑器），所以说你要用它来运行C语言程序的话就需要自己配运行环境了，这个对于初学者比较麻烦，但是因为他是编辑器同时能配运行环境，所以说拓展性非常好，大部分常用语言都可以使用vscode来编写程序。
还有一些别的编译器我就不在这里赘述了。
（点击下一页）之后向大家做一个简单的科普。在座的大部分同学现在对于C语言或者是计算机编程都没有一个概念，这里我以C语言为例，简单的向大家介绍一下程序的运行过程。（念）（展示程序并debug）
下面我们回到程序设计上，程序设计说白了其实就是设计并实现某种算法来解决问题的。算法这个词语大家听起来可能觉得很高大上，其实它非常贴近我们的生活。下面我们来玩个小游戏。（点击下一页）
（读题目）游戏规则想必大家都明白了，有没有同学自愿来玩一下？（点两个人）你们玩慢一点，我来帮你们计数。（随机应变叫几组）有没有同学能告诉我一下你们是怎样选择这个猜数字的策略的吗？我先说一个比较笨的，从1开始猜，猜到100总会对一个是吧（笑），那大家有没有什么能更快的猜到数字的方法呢？（请人说一下）
那么我们引入今天的第一个算法――二分（点击下一页）
二分法显然就是每次询问最中间的数以确定所需要的数字位置。
举个简单的例子：这里有5个从小到大排列好的数：12,49,54,83,95，假设我们需要知道83是第多少个数，我们有两种办法，第一种是从左往右数，发现83是第4个数。第二种是我们先看一下第(1+5)/2=3个数――54，他比83小，显然83的位置不会小于3，接下来我们看第(3+5)/2=4个数，就是83。
对比两种方法，第二种方法在数字非常多的时候能够非常显著的减少查询的次数。
我们来看另一个例子(知乎图书馆例)
假设上面的序列中83是未借的书，那么我们第一次将第3本到第5本过一遍门禁，门禁响了说明这里面有一本未借的书，之后对这三本书重复上述操作。这个时候问题发生了，如果49也是未借的书呢？这里我们发现二分法的使用条件：只有在序列有序（单调）时才可以使用。
大家看是不是我们的生活中就存在着算法。算法其实是很普通的东西，他可以帮助我们简化流程，节省时间。
我们来看下另外一个例子。（点击下一页）（念题目）
首先是照例比较简单的做法（点击），直接计算就行了，这个没啥好说的。
现在我们来稍微优化一下这个计算过程，大家看一下区别在哪里。(点击)
有哪位同学想跟大家分享一下关于这两种做法的区别吗？（随机点人）
我们看最下面的表达式，很容易发现我们在第一种做法里（点回第一种做法并滚一下滚轮）一共做了7次乘法，而在第二种做法中（点击）我们只做了3次乘法。总结一下（点击），对于第一种做法我们需要n-1次乘法（滚轮、点击），而第二种只需要logn次，显然是个很大的提升。
这里引入第二种算法，分治。分治就是说分而治之，（念ppt）
在说程序设计之前呢我先给大家说一些比较琐碎的事情。
（点击下一页）最后向大家介绍一下我们学校的HDOJ，想必大家上过C语言上机课的话都已经使用过这个网站了，那这个网站上呢（点开到11页）这一页的题目都是比较基础的题目，在大家学习C语言的过程中呢可以在这里练习一下，因为编程事实上就是靠大量的经验堆出来的，所以在编程语言学习的过程中一定多练。遇到什么问题也可以向学长学姐们求助。
今天的课程就到这里，希望大家努力学习C语言，有什么不懂的地方可以向我提问，屏幕上有我的QQ，欢迎大家和我交流。最后感谢大家的聆听。